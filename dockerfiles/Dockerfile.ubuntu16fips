FROM ubuntu:xenial


ENV UBUNTUVER=16.04
ENV basearch=x86_64
ENV BASE_FOLDER=/nginx-build
ENV OUTPUT_FOLDER=/output

ENV OPENSSL_FIPS_MODULE_VERSION 2.0.16
ENV OPENSSL_VERSION 1.0.2g
ENV RUBY_SHORT_VERSION 2.3
ENV RUBY_VERSION 2.3.8
RUN apt-get update && \
      apt-get install -y jq fortune cowsay wget unzip tcl-dev tk-dev bzip2 libbz2-dev build-essential \
        g++ make zlib1g-dev libffi-dev libc6 fakeroot libcups2-dev libkrb5-dev libyaml-dev \
        devscripts debhelper libqt4-dev curl git file cmake libsqlite3-dev
RUN wget https://www.openssl.org/source/old/fips/openssl-fips-$OPENSSL_FIPS_MODULE_VERSION.tar.gz -O openssl-fips-$OPENSSL_FIPS_MODULE_VERSION.tar.gz && \
      tar zxf openssl-fips-$OPENSSL_FIPS_MODULE_VERSION.tar.gz && \
      cd openssl-fips-$OPENSSL_FIPS_MODULE_VERSION && \
      ./config && \
      make && \
      make install && \
      cd ../ && \
      rm -rf openssl-fips-$OPENSSL_FIPS_MODULE_VERSION && \
      rm -f openssl-fips-$OPENSSL_FIPS_MODULE_VERSION.tar.gz
RUN wget https://www.openssl.org/source/old/1.0.2/openssl-$OPENSSL_VERSION.tar.gz -O openssl-$OPENSSL_VERSION.tar.gz && \
      tar zxf openssl-$OPENSSL_VERSION.tar.gz && \
      cd openssl-$OPENSSL_VERSION && \
      ./config shared fips && \
      make && \
      make install && \
      cd ../ && \
      rm -rf openssl-$OPENSSL_VERSION && \
      rm -f openssl-$OPENSSL_VERSION.tar.gz
RUN ln -sf /usr/local/ssl/bin/openssl /usr/bin/openssl && \
      mv /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 /lib/x86_64-linux-gnu/old_libcrypto.so.1.0.0 && \
      mv /lib/x86_64-linux-gnu/libssl.so.1.0.0 /lib/x86_64-linux-gnu/old_libssl.so.1.0.0 && \
      cp /usr/local/ssl/lib/libcrypto.so.1.0.0 /lib/x86_64-linux-gnu/ && \
      cp /usr/local/ssl/lib/libssl.so.1.0.0 /lib/x86_64-linux-gnu/ && \
      cp /etc/ssl/certs/* /usr/local/ssl/certs/
RUN wget https://cache.ruby-lang.org/pub/ruby/$RUBY_SHORT_VERSION/ruby-$RUBY_VERSION.tar.gz -O ruby-$RUBY_VERSION.tar.gz && \
      tar zxf ruby-$RUBY_VERSION.tar.gz && \
      cd ruby-$RUBY_VERSION && \
      ./configure --enable-shared --prefix /usr/local/ruby-$RUBY_VERSION --with-openssl-dir=/usr/local/ssl && \
      make && \
      make install && \
      cp /usr/local/ruby-$RUBY_VERSION/lib/libruby.so.$RUBY_SHORT_VERSION.0 /usr/lib/x86_64-linux-gnu/ && \
      cp /usr/local/ruby-$RUBY_VERSION/lib/libruby.so.$RUBY_SHORT_VERSION.0 /lib/x86_64-linux-gnu/ && \
      cd ../ && \
      rm -rf ruby-$RUBY_VERSION && \
      rm -f ruby-$RUBY_VERSION.tar.gz
RUN update-alternatives --install /usr/local/bin/ruby ruby /usr/local/ruby-$RUBY_VERSION/bin/ruby 1 && \
      update-alternatives --install /usr/local/bin/gem gem /usr/local/ruby-$RUBY_VERSION/bin/gem 1

ENV LDFLAGS "-L/usr/local/ssl/lib/"
ENV SL_INSTALL_PATH "/usr/local/ssl"
ENV OPENSSL_FIPS 1
ENV LD_LIBRARY_PATH "/usr/local/ssl/lib/"
ENV CPPFLAGS "-I/usr/local/ssl/include/ -I/usr/local/ssl/include/openssl/"


# Copy the build scrip into the image
COPY scripts/debian_build_module.sh $BASE_FOLDER/debian_build_module.sh

WORKDIR $BASE_FOLDER

# Install the build environment
RUN sed -i 's/# deb-src http:\/\/archive.ubuntu.com\/ubuntu\/ xenial-updates main restricted/deb-src http:\/\/archive.ubuntu.com\/ubuntu\/ xenial-updates main restricted/' /etc/apt/sources.list && \
    apt update && \
    apt-get -y install libgd-dev libgeoip-dev libxml2-dev libxslt-dev vim build-essential libpcre3 libpcre3-dev zlibc zlib1g zlib1g-dev wget gnupg openssl libssl-dev apt-transport-https wget gnupg openssl libssl-dev nginx && \
    chmod +x debian_build_module.sh

ENTRYPOINT ["./debian_build_module.sh"]